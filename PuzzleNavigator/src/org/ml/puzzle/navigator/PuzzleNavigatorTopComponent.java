package org.ml.puzzle.navigator;

import org.ml.model.node.PuzzlePieceSelectionMediator;
import org.ml.model.node.PuzzleChildFactory;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.ProxyLookup;

@ConvertAsProperties(
        dtd = "-//org.ml.puzzle.navigator//PuzzleNavigator//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "PuzzleNavigatorTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "org.ml.puzzle.navigator.PuzzleNavigatorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_PuzzleNavigatorAction",
        preferredID = "PuzzleNavigatorTopComponent"
)
@Messages({
    "CTL_PuzzleNavigatorAction=PuzzleNavigator",
    "CTL_PuzzleNavigatorTopComponent=PuzzleNavigator Window",
    "HINT_PuzzleNavigatorTopComponent=This is a PuzzleNavigator window"
})
public final class PuzzleNavigatorTopComponent extends TopComponent implements ExplorerManager.Provider{

    public PuzzleNavigatorTopComponent() {
        initComponents();
        setName(Bundle.CTL_PuzzleNavigatorTopComponent());
        setToolTipText(Bundle.HINT_PuzzleNavigatorTopComponent());
        beanTreeView1.setRootVisible(false);
        associateLookup(ExplorerUtils.createLookup(em, getActionMap()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(beanTreeView1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(beanTreeView1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    ExplorerManager em = PuzzlePieceSelectionMediator.getExplorerManager();
    
    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }
    
}
